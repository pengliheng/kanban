{"version":3,"sources":["utils/constants.js","Api.js","views/login.jsx","views/register.jsx","components/item.jsx","components/board.jsx","components/control.jsx","views/dashboard.jsx","components/frontendAuth.jsx","store/reducer/task.js","store/reducer/user.js","store/reducer/index.js","store/index.js","App.js","serviceWorker.js","index.js"],"names":["ACTION_TYPE","axios","Axios","create","baseURL","document","domain","timeout","withCredentials","data","url","method","then","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","Login","useState","username","setUsername","password","setPassword","classes","dispatch","useDispatch","a","Api","type","payload","name","className","Container","component","maxWidth","CssBaseline","Typography","variant","FormControl","noValidate","TextField","value","onChange","e","target","fullWidth","id","label","autoComplete","autoFocus","Button","color","onClick","Grid","container","item","to","Register","Item","title","taskList","select","map","task","i","key","Board","backlog","useSelector","state","content","todo","ongoing","done","handleSelect","Control","taskName","setTaskName","selectName","selectId","placeholder","alert","Dashboard","FrontendAuth","props","user","userInfo","location","pathname","path","taskInitState","combineReducers","action","Math","random","filter","selectTask","find","ii","length","console","log","store","createStore","reducer","composeWithDevTools","applyMiddleware","logger","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d6d9afda.chunk.js","sourcesContent":["const ACTION_TYPE = {\n    CREATE_TASK: 'CREATE_TASK',\n    DELETE_TASK: 'DELETE_TASK',\n    MOVE_BACK_TASK: 'MOVE_BACK_TASK',\n    MOVE_FORWARD_TASK: 'MOVE_FORWARD_TASK',\n    SELECT_TASK: 'SELECT_TASK',\n    SAVE_USER_INFO: 'SAVE_USER_INFO'\n}\n\n\nexport {\n    ACTION_TYPE\n}","import Axios from 'axios'\n\nconst axios = Axios.create({\n    baseURL: `//${document.domain}:8080`,\n    timeout: 5000, // 请求超时时间\n    withCredentials: true,\n});\n\nexport default {\n    login: (data) => axios({\n        url: '/login',\n        method: 'post',\n        data\n    }).then(data => data.data),\n    logout: (data) => axios({\n        url: '/logout',\n        method: 'post',\n        data\n    }).then(data => data.data),\n    register: (data) => axios({\n        url: '/register',\n        method: 'post',\n        data\n    }).then(data => data.data)\n\n}\n","import React, { useState } from 'react'\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport Container from '@material-ui/core/Container';\nimport { Link } from \"react-router-dom\";\nimport { useDispatch } from 'react-redux'\nimport { ACTION_TYPE } from '../utils/constants'\nimport Api from '../Api'\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\n\nexport default function Login() {\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    \n    async function handleLogin() {\n        await Api.login({\n            username,\n            password\n        })\n        dispatch({\n            type: ACTION_TYPE.SAVE_USER_INFO,\n            payload: {\n                name: 'name'\n            }\n        })\n    }\n    return <div className=\"login\">\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign in\n                </Typography>\n                <FormControl className={classes.form} noValidate>\n                    <TextField\n                        value={username}\n                        onChange={e=>setUsername(e.target.value)}\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        fullWidth\n                        id=\"username\"\n                        label=\"User Name\"\n                        name=\"username\"\n                        autoComplete=\"username\"\n                        autoFocus\n                    />\n                    <TextField\n                        value={password}\n                        onChange={e=>setPassword(e.target.value)}\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                    />\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={handleLogin}\n                    >\n                        Sign In\n                    </Button>\n                    <Grid container>\n                        <Grid item>\n                            <Link to=\"/register\">\n                                Don't have an account? Sign Up\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </FormControl>\n            </div>\n        </Container>\n    </div>\n}","import React from 'react'\n\nexport default function Register() {\n    return <div className=\"register\">\n        register\n    </div>\n}","import React from 'react'\nimport './item.scss'\nexport default function Item({title, taskList, select}) {\n    return <div className=\"item\">\n        <h2>{title}</h2>\n        <div className=\"task-list\">\n            {taskList.map((task,i) => {\n                return <span onClick={() => select(task)} className=\"task\" key={task.id}>{task.name}</span>\n            })}\n        </div>\n    </div>\n}","import React from 'react'\nimport { useSelector,useDispatch } from 'react-redux'\nimport Item from './item'\nimport './board.scss'\nimport { ACTION_TYPE } from '../utils/constants'\nexport default function Board() {\n    const dispatch = useDispatch()\n    const backlog = useSelector(state => state.task.content[0])\n    const todo = useSelector(state => state.task.content[1])\n    const ongoing = useSelector(state => state.task.content[2])\n    const done = useSelector(state => state.task.content[3])\n    function handleSelect(id) {\n        dispatch({\n            type: ACTION_TYPE.SELECT_TASK,\n            payload: id\n        })\n    }\n    return <div className=\"board\">\n        <h1>kanban board</h1>\n        <div className=\"item-container\">\n            <Item select={handleSelect} title=\"Backlog\" taskList={backlog}></Item>\n            <Item select={handleSelect} title=\"To Do\" taskList={todo}></Item>\n            <Item select={handleSelect} title=\"Ongoing\" taskList={ongoing}></Item>\n            <Item select={handleSelect} title=\"Done\" taskList={done}></Item>\n        </div>\n    </div>\n}","import React, { useState } from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport { ACTION_TYPE } from '../utils/constants'\nimport './control.scss'\n\nexport default function Control() {\n    const dispatch = useDispatch()\n    const [taskName, setTaskName] = useState('')\n    const selectName = useSelector(state => state.task.select ? state.task.select.name : '')\n    const selectId = useSelector(state => state.task.select ? state.task.select.id : '')\n    function handleCreateTask() {\n        if (!taskName) return\n        dispatch({\n            type: ACTION_TYPE.CREATE_TASK,\n            payload: taskName\n        })\n        setTaskName('')\n    }\n    function handleDeleteTask() {\n        if (!selectId) {\n            alert('You should select task before delete!')\n            return\n        }\n        dispatch({\n            type: ACTION_TYPE.DELETE_TASK,\n            payload: selectId\n        })\n        dispatch({\n            type: ACTION_TYPE.SELECT_TASK,\n            payload: null\n        })\n    }\n    function handleInputValueChange(e) {\n        setTaskName(e.target.value)\n    }\n    function handleMoveBackTask(e) {\n        dispatch({\n            type: ACTION_TYPE.MOVE_BACK_TASK,\n            payload: selectId\n        })\n    }\n    function handleMoveForwardTask() {\n        dispatch({\n            type: ACTION_TYPE.MOVE_FORWARD_TASK,\n            payload: selectId\n        })\n    }\n    return <div className=\"control\">\n        <h1>Controls</h1>\n        <div className=\"create\">\n            <input value={taskName} onChange={handleInputValueChange} placeholder=\"New task name\" type=\"text\"/>\n            <button onClick={handleCreateTask}>Create</button>\n        </div>\n        <div className=\"edit\">\n            <input onChange={()=>{}} value={selectName} placeholder=\"Click on an existing task\" type=\"text\" />\n            <button onClick={handleMoveBackTask}>Move back</button>\n            <button onClick={handleMoveForwardTask}>Move forward</button>\n            <button onClick={handleDeleteTask}>Delete</button>\n        </div>\n    </div>\n}","import React from 'react'\nimport Board from '../components/board'\nimport Control from '../components/control'\n\nexport default function Dashboard() {\n    return <div className=\"board\">\n        <Control />\n        <Board />\n    </div>\n}","import React from 'react'\nimport {useSelector} from 'react-redux'\nimport {\n    Route,\n    Redirect\n} from \"react-router-dom\"\n\nimport Login from '../views/login'\nimport Register from '../views/register'  \nimport Dashboard from '../views/dashboard'\n\nexport default function FrontendAuth(props) {\n    const userInfo = useSelector(state => state.user.userInfo)\n    if(userInfo) {\n        if (props.location.pathname !== '/') {\n            return <Redirect to='/' />\n        }\n        return <Route path=\"/\">\n            <Dashboard />\n        </Route>\n    } else {\n        if (props.location.pathname === '/register') {\n            return <Route path=\"/register\">\n                <Register />\n            </Route>\n        } else if (props.location.pathname === '/login') {\n            return <Route path=\"/login\">\n                <Login />\n            </Route>\n        }\n        return <Redirect to='/login' />\n    }\n}","import { ACTION_TYPE } from '../../utils/constants'\n\nconst taskInitState = {\n    content: [\n        [],[],[],[]\n    ],\n    select: null\n}\nexport default function taskReducer(state=taskInitState, action) {\n    switch(action.type) {\n        case ACTION_TYPE.CREATE_TASK:\n            return {\n                ...state,\n                content: state.content.map((item,i) => {\n                    if (i===0) {\n                        return [\n                            ...item,\n                            {name: action.payload, id: Math.random()}\n                        ]\n                    }\n                    return item\n                })\n            }\n        case ACTION_TYPE.SELECT_TASK:\n            return {\n                ...state,\n                select: action.payload\n            }\n        case ACTION_TYPE.DELETE_TASK:\n            return {\n                ...state,\n                content: state.content.map(item => item.filter(task => task.id !== action.payload))\n            }\n            case ACTION_TYPE.MOVE_BACK_TASK:\n                if (!action.payload) return state\n                for(let i=0;i<state.content.length;i++) {\n                    const selectTask = state.content[i].find(task => task.id === action.payload)\n                    if (i>0 && selectTask) {\n                        return {\n                            ...state,\n                            content: state.content.map((item,ii) => {\n                                if (ii === i-1) {\n                                    return [...item, selectTask]\n                                } else if (ii===i) {\n                                    return item.filter(task => task.id !== action.payload)\n                                }\n                                return item\n                            })\n                        }\n                    }\n                }\n                return state\n            case ACTION_TYPE.MOVE_FORWARD_TASK:\n                if (!action.payload) return state\n                for(let i=0;i<state.content.length;i++) {\n                    const selectTask = state.content[i].find(task => task.id === action.payload)\n                    if (i<state.content.length-1 && selectTask) {\n                        return {\n                            ...state,\n                            content: state.content.map((item,ii) => {\n                                if (ii === i+1) {\n                                    return [...item, selectTask]\n                                } else if (ii===i) {\n                                    return item.filter(task => task.id !== action.payload)\n                                }\n                                return item\n                            })\n                        }\n                    }\n                }\n                return state\n        default:\n            return state\n    }\n}","import { ACTION_TYPE } from '../../utils/constants'\n\nconst taskInitState = {\n    userInfo: null\n}\nexport default function userReducer(state=taskInitState, action) {\n    switch(action.type) {\n        case ACTION_TYPE.SAVE_USER_INFO:\n            return {\n                ...state,\n                userInfo: action.payload\n            }\n        case 'logout':\n            return {\n                ...state,\n                userInfo: null\n            }\n        default:\n            return state\n    }\n}","import { combineReducers } from 'redux'\nimport taskReducer from './task'\nimport userReducer from './user'\n\nexport default combineReducers({\n    task: taskReducer,\n    user: userReducer,\n})\n","import {createStore, applyMiddleware} from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport logger from 'redux-logger'\nimport { ACTION_TYPE } from '../utils/constants'\n\nimport reducer from './reducer'\nconsole.log(111)\nconst store = new createStore(\n    reducer,\n    composeWithDevTools(\n        applyMiddleware(logger)\n    )\n)\n\nstore.dispatch({\n    type: ACTION_TYPE.CREATE_TASK,\n    payload: 'task 0'\n})\nstore.dispatch({\n    type: ACTION_TYPE.CREATE_TASK,\n    payload: 'task 1'\n})\nstore.dispatch({\n    type: ACTION_TYPE.CREATE_TASK,\n    payload: 'task 2'\n})\nstore.dispatch({\n    type: ACTION_TYPE.CREATE_TASK,\n    payload: 'task 3'\n})\nstore.dispatch({\n    type: ACTION_TYPE.CREATE_TASK,\n    payload: 'task 4'\n})\nstore.dispatch({\n    type: ACTION_TYPE.CREATE_TASK,\n    payload: 'task 5'\n})\nstore.dispatch({\n    type: ACTION_TYPE.CREATE_TASK,\n    payload: 'task 6'\n})\nstore.dispatch({\n    type: ACTION_TYPE.CREATE_TASK,\n    payload: 'task 7'\n})\nstore.dispatch({\n    type: ACTION_TYPE.CREATE_TASK,\n    payload: 'task 8'\n})\nstore.dispatch({\n    type: ACTION_TYPE.CREATE_TASK,\n    payload: 'task 9'\n})\n\nexport default store\n","import React from 'react';\nimport {Provider} from 'react-redux'\nimport FrontendAuth from './components/frontendAuth'\nimport store from './store/index.js'\nimport './App.scss';\nimport {\n  HashRouter as Router,\n  Switch,\n  Link\n} from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <nav>\n            <ul>\n              <li>\n                <Link to=\"/\">Dashboard</Link>\n              </li>\n              <li>\n                <Link to=\"/login\">Login</Link>\n              </li>\n              <li>\n                <Link to=\"/register\">Register</Link>\n              </li>\n            </ul>\n          </nav>\n          <Switch>\n            <FrontendAuth />\n            {/* <Route path=\"/login\">\n              <Login />\n            </Route>\n            <Route path=\"/register\">\n              <Register />\n            </Route>\n            <Route path=\"/\">\n              <Dashboard />\n            </Route> */}\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}